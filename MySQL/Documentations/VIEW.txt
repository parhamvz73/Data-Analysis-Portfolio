SELECT * FROM orderdetails;
SELECT * FROM products;
-- creating a view with cte and join for 2 tables with same key
CREATE VIEW ProductRevenueView AS
WITH first_CTE AS (
    SELECT
        A.productcode AS Product_Code,
        A.ordernumber AS Order_Number,
        A.quantityordered AS Quantity_Ordered,
        A.priceeach AS Price_Per_EACH,
        B.productname AS Product_Name,
        B.buyprice AS Base_Price,
        B.MSRP 
    FROM orderdetails A 
    INNER JOIN products B
    ON A.productcode = B.productcode
)
SELECT
    Product_Code,
    Order_Number,
    Quantity_Ordered,
    Price_Per_EACH,
    Product_Name,
    Base_Price,
    MSRP, 
    (Price_Per_EACH - Base_Price) AS Product_revenue,
    (MSRP - Price_Per_EACH) AS discount
FROM first_CTE
ORDER BY Product_revenue DESC;
-- showing view to make sure it works
SELECT * FROM productrevenueview;

-- showing a breakdown of which credit limit group made higher purchases 
SELECT * FROM orders;
SELECT * FROM customers;
SELECT * FROM orderdetails;
-- MERGING TABLES
CREATE VIEW credit_limit_groups_and_purchases
AS
WITH first_table
AS
(
SELECT 
t1.ordernumber ,
t1.customernumber,
CASE 
WHEN t2.creditlimit < 50000 THEN 'a:Less than $50K'
WHEN t2.creditlimit BETWEEN 50000 AND 100000 THEN 'b:Between $50K and $100K'
WHEN t2.creditlimit BETWEEN 100000 AND 150000 THEN 'c:Between $100K and $150K'
ELSE 'd:More than $150K' END AS sales_value_groups,
t3.quantityordered * t3.priceeach as sales_value
FROM orders t1
INNER JOIN customers t2
ON t1.customernumber = t2.customernumber
INNER JOIN orderdetails t3
ON t1.ordernumber = t3.ordernumber)

SELECT
ordernumber,
customernumber,
sales_value_groups,
SUM(sales_value)
FROM first_table
GROUP BY ordernumber,
customernumber,
sales_value_groups;
-- Check view if it works correctly
SELECT * FROM credit_limit_groups_and_purchases;
