SELECT * FROM orders;
-- counting total amount of orders per day grouped by date and being shown by descending list of date
SELECT 
orderdate,
count(orderdate) AS daily_order_amounts
FROM orders
GROUP BY orderdate
having daily_order_amounts >= 1
ORDER BY  daily_order_amounts DESC;
-- in order to be able to show only the max value and its orderdate we use MAX
SELECT 
orderdate,
count(orderdate) AS daily_order_amounts,
max(daily_order_amounts) as max_order_amount_date
FROM orders
GROUP BY orderdate
having daily_order_amounts >= 1
ORDER BY  daily_order_amounts DESC;
-- but code above wont work since we first need to have this query being processed to be able to retrive the daily_order_amounts, therefore we use cte
WITH CTE_amounts
AS
(
SELECT 
orderdate,
count(orderdate) AS daily_order_amounts
FROM orders
GROUP BY orderdate
having daily_order_amounts >= 1
)
SELECT
max(daily_order_amounts) as max_order_amount_date,
min(daily_order_amounts) as min_order_amount_date
FROM CTE_amounts
;
-- MIN and MAX as aggregate then we should use group by and having like getting orders from specific date to another date using min max
SELECT
orderdate,
total_orders_daily
FROM (
SELECT 
orderdate,
count(ordernumber) AS total_orders_daily
FROM orders
GROUP BY orderdate
) AS total_orders
HAVING orderdate > '2003.01.01'
AND orderdate < '2003.01.31'